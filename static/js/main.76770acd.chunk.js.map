{"version":3,"sources":["profile.png","components/header.js","components/aboutme.js","components/myexperience.js","components/myskills.js","components/contactme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","profilestyle","borderRadius","width","Header","className","src","profile","style","alt","paragraphstyle","color","AboutMe","id","class","size","MyExperience","tablestyle","margin","MySkills","ContactMe","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,qC,8KCErCC,EAAc,CAChBC,aAAc,MACdC,MAAO,SAWIC,MATf,WACI,OACA,yBAAKC,UAAU,yBACX,yBAAKC,IAAKC,IAASC,MAAOP,EAAcQ,IAAI,OAC5C,4CACA,uECVFC,EAAiB,CACnBC,MAAO,QAWIC,MATf,WACI,OACI,yBAAKC,GAAG,aACJ,wBAAIC,MAAM,QAAV,YACA,uBAAGN,MAAOE,EAAgBI,MAAM,aAAhC,IAA6C,0BAAMC,KAAK,KAAX,wQAAoR,6BAAK,6BAAzR,wUAAmmB,6BAAK,6BAAxmB,uMCyB1CC,MAhCf,WACI,OACI,6BACI,wBAAIF,MAAM,QAAV,iBACA,yBAAKA,MAAM,4BACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,wBACP,wBAAIA,MAAM,YACN,4BACI,4CACA,2DACA,iHAEJ,4BACI,4EACA,sDACA,gIAEJ,4BACI,uDACA,kDACA,kGACA,oGACA,0JCvB1BG,EAAa,CACfC,OAAQ,UA4DGC,MA1Df,WACI,OACI,yBAAKN,GAAG,aACJ,wBAAIC,MAAM,QAAV,aACA,2BAAOA,MAAM,aAAaN,MAAOS,GAC7B,+BACI,4BACI,sDACA,qDACA,oDAGR,+BACI,4BACI,+CACA,uCACA,sCAEJ,4BACI,qCACA,0CACA,4CAEJ,4BACI,mCACA,qCACA,oCAEJ,4BACI,sCACA,0CACA,uCAEJ,4BACI,wCACA,uCACA,oCAEJ,4BACI,iDACA,2CACA,qCAEJ,4BACI,qCACA,4CACA,uDAEJ,4BACI,uCACA,sCACA,0CC7CTG,MATf,WACI,OACI,yBAAKP,GAAG,aACJ,wBAAIC,MAAM,QAAV,cACA,wBAAIA,MAAM,QAAV,+BACA,wBAAIA,MAAM,QAAV,gCCaGO,MAZf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.76770acd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.5ba2f122.png\";","import React from 'react';\nimport profile from '../profile.png'\nconst profilestyle ={\n    borderRadius: '50%',\n    width: '200px'\n}\nfunction Header(){\n    return (\n    <div className='jumbotron text-center'>\n        <img src={profile} style={profilestyle} alt='Me'></img>\n        <h1>Matthew Shin</h1>\n        <h4>Aspiring Full Stack Software Engineer</h4>\n    </div>\n)\n}\nexport default Header;","import React from 'react';\nconst paragraphstyle = {\n    color: 'gray'\n}\nfunction AboutMe(){\n    return(\n        <div id='container'>\n            <h2 class='ml-5'>About Me</h2>\n            <p style={paragraphstyle} class='ml-5 pl-5'> <font size='4'> Driven, diligent, and astute full-stack software engineer who is based in San Bruno California. I strive to continuously adapt to the ever-changing industry and incorporate different technologies and solutions to create a innovative and well-organized product.<br/><br/>Coming from a multi-cultural background sparks a natural curiosity in me to learn new languages and to understand and integrate myself into tech culture. As a result I am excited to dive into the industry and open to many different experiences that will enhance my knowledge and challenges me to step out of my comfort zone. <br/><br/> In my free time I watch a lot of NBA and am continuously fascinated by the stories  that statistics can paint. I also love to connect with people and getting to know them on a one-one basis. </font></p>\n        </div>\n    )\n}\n\nexport default AboutMe;","import React from 'react';\nfunction MyExperience(){\n    return (\n        <div>\n            <h2 class='ml-5'>My Experience</h2>\n            <div class=\"container mt-3 mb-3 ml-5\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-0\">\n                        <ul class=\"timeline\">\n                            <li>\n                                <h5>Hack Reactor</h5>\n                                <h6>October 2019 - January 2020</h6>\n                                <p>12 Week Software Engineering Immersive Program. Graduated with Most Growth Award.</p>\n                            </li>\n                            <li>\n                                <h5>Volunter Software Engineer at EchoCompassion</h5>\n                                <h6>April 2020 - July 2020</h6>\n                                <p>Handled support tickets that revolved around front-end styling and incorrect back-end API calls.</p>\n                            </li>\n                            <li>\n                                <h5>Data Project Contractor</h5>\n                                <h6>January 2021 - Now</h6>\n                                <p>Worked with GCP BigQuery to analyze over 10 million records of data</p>\n                                <p>Utilized SQL in conjunction BigQuery to run various aggregate queries</p>\n                                <p>Created multiple different dashboards using Google Connected Sheets/Data Studio to assist with different departments</p>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default MyExperience;","import React from 'react';\nconst tablestyle = {\n    margin: '0 auto'\n}\nfunction MySkills(){\n    return (\n        <div id='container'>\n            <h2 class='ml-5'>My Skills</h2>\n            <table class='table w-75' style={tablestyle}>\n                <thead>\n                    <tr>\n                        <th>Front End Technologies</th>\n                        <th>Back End Technologies</th>\n                        <th>Other Technologies</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>JavaScript(ES6)</td>\n                        <td>Node.JS</td>\n                        <td>Azure</td>\n                    </tr>\n                    <tr>\n                        <td>HTML5</td>\n                        <td>Express.JS</td>\n                        <td>AWS(EC2/S3)</td>\n                    </tr>\n                    <tr>\n                        <td>CSS</td>\n                        <td>MySQL</td>\n                        <td>Git</td>\n                    </tr>\n                    <tr>\n                        <td>jQuery</td>\n                        <td>PostgreSQL</td>\n                        <td>Docker</td>\n                    </tr>\n                    <tr>\n                        <td>React.JS</td>\n                        <td>MongoDB</td>\n                        <td>NPM</td>\n                    </tr>\n                    <tr>\n                        <td>Styled Components</td>\n                        <td>Mongoose.JS</td>\n                        <td>Jest</td>\n                    </tr>\n                    <tr>\n                        <td>Babel</td>\n                        <td>GCP BigQuery</td>\n                        <td>Excel/Connected Sheets</td>\n                    </tr>\n                    <tr>\n                        <td>Webpack</td>\n                        <td>Python</td>\n                        <td>NGINX</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default MySkills;","import React from 'react';\nfunction ContactMe(){\n    return(\n        <div id='container'>\n            <h2 class='ml-5'>Contact Me</h2>\n            <h6 class='ml-5'>Email: mattshin64@gmail.com</h6>\n            <h6 class='ml-5'>Phone Number: 408-836-6957</h6>\n        </div>\n    )\n}\nexport default ContactMe;","import React from 'react';\nimport './App.css';\nimport Header from './components/header.js'\nimport AboutMe from './components/aboutme.js'\nimport MyExperience from './components/myexperience.js'\nimport MySkills from './components/myskills.js'\nimport ContactMe from './components/contactme.js'\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <AboutMe/>\n      <MyExperience/>\n      <MySkills/>\n      <ContactMe/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}