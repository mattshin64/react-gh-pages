{"version":3,"sources":["profile.png","components/header.js","components/aboutme.js","components/myexperience.js","components/myskills.js","components/contactme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","profilestyle","borderRadius","width","Header","className","src","profile","style","alt","paragraphstyle","color","AboutMe","id","class","size","MyExperience","tablestyle","margin","MySkills","ContactMe","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,qC,8KCErCC,EAAc,CAChBC,aAAc,MACdC,MAAO,SAWIC,MATf,WACI,OACA,yBAAKC,UAAU,yBACX,yBAAKC,IAAKC,IAASC,MAAOP,EAAcQ,IAAI,OAC5C,4CACA,uECVFC,EAAiB,CACnBC,MAAO,QAWIC,MATf,WACI,OACI,yBAAKC,GAAG,aACJ,wBAAIC,MAAM,QAAV,YACA,uBAAGN,MAAOE,EAAgBI,MAAM,aAAhC,IAA6C,0BAAMC,KAAK,KAAX,wQAAoR,6BAAK,6BAAzR,wUAAmmB,6BAAK,6BAAxmB,uMCyB1CC,MAhCf,WACI,OACI,6BACI,wBAAIF,MAAM,QAAV,iBACA,yBAAKA,MAAM,4BACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,wBACP,wBAAIA,MAAM,YACN,4BACI,4CACA,2DACA,iHAEJ,4BACI,4EACA,sDACA,gIAEJ,4BACI,6DACA,kDACA,kGACA,oGACA,0JCvB1BG,EAAa,CACfC,OAAQ,UA4DGC,MA1Df,WACI,OACI,yBAAKN,GAAG,aACJ,wBAAIC,MAAM,QAAV,aACA,2BAAOA,MAAM,aAAaN,MAAOS,GAC7B,+BACI,4BACI,sDACA,qDACA,oDAGR,+BACI,4BACI,+CACA,uCACA,sCAEJ,4BACI,qCACA,0CACA,4CAEJ,4BACI,mCACA,mCACA,oCAEJ,4BACI,sCACA,0CACA,uCAEJ,4BACI,wCACA,uCACA,oCAEJ,4BACI,iDACA,2CACA,qCAEJ,4BACI,qCACA,4CACA,6CAEJ,4BACI,uCACA,sCACA,0CC7CTG,MATf,WACI,OACI,yBAAKP,GAAG,aACJ,wBAAIC,MAAM,QAAV,cACA,wBAAIA,MAAM,QAAV,+BACA,wBAAIA,MAAM,QAAV,gCCaGO,MAZf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.76c28989.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.5ba2f122.png\";","import React from 'react';\r\nimport profile from '../profile.png'\r\nconst profilestyle ={\r\n    borderRadius: '50%',\r\n    width: '200px'\r\n}\r\nfunction Header(){\r\n    return (\r\n    <div className='jumbotron text-center'>\r\n        <img src={profile} style={profilestyle} alt='Me'></img>\r\n        <h1>Matthew Shin</h1>\r\n        <h4>Aspiring Full Stack Software Engineer</h4>\r\n    </div>\r\n)\r\n}\r\nexport default Header;","import React from 'react';\r\nconst paragraphstyle = {\r\n    color: 'gray'\r\n}\r\nfunction AboutMe(){\r\n    return(\r\n        <div id='container'>\r\n            <h2 class='ml-5'>About Me</h2>\r\n            <p style={paragraphstyle} class='ml-5 pl-5'> <font size='4'> Driven, diligent, and astute full-stack software engineer who is based in San Bruno California. I strive to continuously adapt to the ever-changing industry and incorporate different technologies and solutions to create a innovative and well-organized product.<br/><br/>Coming from a multi-cultural background sparks a natural curiosity in me to learn new languages and to understand and integrate myself into tech culture. As a result I am excited to dive into the industry and open to many different experiences that will enhance my knowledge and challenges me to step out of my comfort zone. <br/><br/> In my free time I watch a lot of NBA and am continuously fascinated by the stories  that statistics can paint. I also love to connect with people and getting to know them on a one-one basis. </font></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nfunction MyExperience(){\r\n    return (\r\n        <div>\r\n            <h2 class='ml-5'>My Experience</h2>\r\n            <div class=\"container mt-3 mb-3 ml-5\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 offset-md-0\">\r\n                        <ul class=\"timeline\">\r\n                            <li>\r\n                                <h5>Hack Reactor</h5>\r\n                                <h6>October 2019 - January 2020</h6>\r\n                                <p>12 Week Software Engineering Immersive Program. Graduated with Most Growth Award.</p>\r\n                            </li>\r\n                            <li>\r\n                                <h5>Volunter Software Engineer at EchoCompassion</h5>\r\n                                <h6>April 2020 - July 2020</h6>\r\n                                <p>Handled support tickets that revolved around front-end styling and incorrect back-end API calls.</p>\r\n                            </li>\r\n                            <li>\r\n                                <h5>Contract Data Project Analyst</h5>\r\n                                <h6>January 2021 - Now</h6>\r\n                                <p>Worked with GCP BigQuery to analyze over 10 million records of data</p>\r\n                                <p>Utilized SQL in conjunction BigQuery to run various aggregate queries</p>\r\n                                <p>Created multiple different dashboards using Google Connected Sheets/Data Studio to assist with different departments</p>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MyExperience;","import React from 'react';\r\nconst tablestyle = {\r\n    margin: '0 auto'\r\n}\r\nfunction MySkills(){\r\n    return (\r\n        <div id='container'>\r\n            <h2 class='ml-5'>My Skills</h2>\r\n            <table class='table w-75' style={tablestyle}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Front End Technologies</th>\r\n                        <th>Back End Technologies</th>\r\n                        <th>Other Technologies</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>JavaScript(ES6)</td>\r\n                        <td>Node.JS</td>\r\n                        <td>Azure</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>HTML5</td>\r\n                        <td>Express.JS</td>\r\n                        <td>AWS(EC2/S3)</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>CSS</td>\r\n                        <td>SQL</td>\r\n                        <td>Git</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>jQuery</td>\r\n                        <td>PostgreSQL</td>\r\n                        <td>Docker</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>React.JS</td>\r\n                        <td>MongoDB</td>\r\n                        <td>NPM</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Styled Components</td>\r\n                        <td>Mongoose.JS</td>\r\n                        <td>Jest</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Babel</td>\r\n                        <td>GCP BigQuery</td>\r\n                        <td>Excel/Sheets</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Webpack</td>\r\n                        <td>Python</td>\r\n                        <td>NGINX</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nexport default MySkills;","import React from 'react';\r\nfunction ContactMe(){\r\n    return(\r\n        <div id='container'>\r\n            <h2 class='ml-5'>Contact Me</h2>\r\n            <h6 class='ml-5'>Email: mattshin64@gmail.com</h6>\r\n            <h6 class='ml-5'>Phone Number: 408-836-6957</h6>\r\n        </div>\r\n    )\r\n}\r\nexport default ContactMe;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/header.js'\r\nimport AboutMe from './components/aboutme.js'\r\nimport MyExperience from './components/myexperience.js'\r\nimport MySkills from './components/myskills.js'\r\nimport ContactMe from './components/contactme.js'\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <AboutMe/>\r\n      <MyExperience/>\r\n      <MySkills/>\r\n      <ContactMe/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}