{"version":3,"sources":["profile.jpg","components/header.js","components/aboutme.js","components/myexperience.js","components/myskills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","profile","alt","paragraphstyle","color","paddingLeft","paddingRight","AboutMe","id","style","size","MyExperience","class","MySkills","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,qC,8KCW5BC,MATf,WACI,OACA,yBAAKC,UAAU,yBACX,yBAAKC,IAAKC,IAASC,IAAI,OACvB,4CACA,8DCNFC,EAAiB,CACnBC,MAAO,OACPC,YAAa,QACbC,aAAc,SAWHC,MATf,WACI,OACI,yBAAKC,GAAG,aACJ,wBAAIC,MAAO,CAACJ,YAAa,MAAzB,YACA,uBAAGI,MAAON,GAAV,IAA2B,0BAAMO,KAAK,KAAX,kDCwCxBC,MAjDf,WACI,OACI,6BACI,wBAAIF,MAAO,CAACJ,YAAa,MAAzB,iBACA,yBAAKO,MAAM,MAAMH,MAAO,CAACJ,YAAa,IAAKC,aAAc,MACrD,yBAAKM,MAAM,aACP,yBAAKA,MAAM,kBACP,yBAAKA,MAAM,YACP,0BAAMA,MAAM,qBACZ,uBAAGA,MAAM,oBACL,wBAAIA,MAAM,SAAV,gBACA,uBAAGA,MAAM,eAAT,iIAKR,yBAAKA,MAAM,YACP,0BAAMA,MAAM,sBACZ,uBAAGA,MAAM,oBACL,wBAAIA,MAAM,SAAV,iBACA,uBAAGA,MAAM,eAAT,iIAKR,yBAAKA,MAAM,YACP,0BAAMA,MAAM,yBACZ,uBAAGA,MAAM,oBACL,wBAAIA,MAAM,SAAV,gBACA,uBAAGA,MAAM,eAAT,iIAKR,yBAAKA,MAAM,YACP,0BAAMA,MAAM,sBACZ,uBAAGA,MAAM,oBACL,wBAAIA,MAAM,SAAV,iBACA,uBAAGA,MAAM,eAAT,sIC/BjBC,MAPf,WACI,OACI,yBAAKL,GAAG,aACJ,wBAAIC,MAAO,CAACJ,YAAa,MAAzB,eCaGS,MAXf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4c1f5465.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.cea98b05.jpg\";","import React from 'react';\nimport profile from '../profile.jpg'\nfunction Header(){\n    return (\n    <div className='jumbotron text-center'>\n        <img src={profile} alt='Me'></img>\n        <h1>Matthew Shin</h1>\n        <h4>Full Stack Software Engineer</h4>\n    </div>\n)\n}\nexport default Header;","import React from 'react';\nconst paragraphstyle = {\n    color: 'gray',\n    paddingLeft: '100px',\n    paddingRight: '100px',\n}\nfunction AboutMe(){\n    return(\n        <div id='container'>\n            <h2 style={{paddingLeft: 100}}>About Me</h2>\n            <p style={paragraphstyle}> <font size='4'> Hello I am an aspiring software engineer. </font></p>\n        </div>\n    )\n}\n\nexport default AboutMe;","import React from 'react';\nfunction MyExperience(){\n    return (\n        <div>\n            <h2 style={{paddingLeft: 100}}>My Experience</h2>\n            <div class=\"row\" style={{paddingLeft: 100, paddingRight: 100}}>\n                <div class=\"col-md-12\">\n                    <div class=\"main-timeline2\">\n                        <div class=\"timeline\">\n                            <span class=\"icon fa fa-globe\"></span>\n                            <a class=\"timeline-content\">\n                                <h3 class=\"title\">Web Designer</h3>\n                                <p class=\"description\">\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer malesuada tellus lorem, et condimentum neque commodo quis.\n                                </p>\n                            </a>\n                        </div>\n                        <div class=\"timeline\">\n                            <span class=\"icon fa fa-rocket\"></span>\n                            <a class=\"timeline-content\">\n                                <h3 class=\"title\">Web Developer</h3>\n                                <p class=\"description\">\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer malesuada tellus lorem, et condimentum neque commodo quis.\n                                </p>\n                            </a>\n                        </div>\n                        <div class=\"timeline\">\n                            <span class=\"icon fa fa-briefcase\"></span>\n                            <a class=\"timeline-content\">\n                                <h3 class=\"title\">Web Designer</h3>\n                                <p class=\"description\">\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer malesuada tellus lorem, et condimentum neque commodo quis.\n                                </p>\n                            </a>\n                        </div>\n                        <div class=\"timeline\">\n                            <span class=\"icon fa fa-mobile\"></span>\n                            <a class=\"timeline-content\">\n                                <h3 class=\"title\">Web Developer</h3>\n                                <p class=\"description\">\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer malesuada tellus lorem, et condimentum neque commodo quis.\n                                </p>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default MyExperience;","import React from 'react';\nfunction MySkills(){\n    return (\n        <div id='container'>\n            <h2 style={{paddingLeft: 100}}>My Skills</h2>\n        </div>\n    )\n}\nexport default MySkills;","import React from 'react';\nimport './App.css';\nimport Header from './components/header.js'\nimport AboutMe from './components/aboutme.js'\nimport MyExperience from './components/myexperience.js'\nimport MySkills from './components/myskills.js'\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <AboutMe/>\n      <MyExperience/>\n      <MySkills/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}